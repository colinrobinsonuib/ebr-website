---
import ContentLayout from '../../layouts/ContentLayout.astro';
import { getCollection, getEntries, render } from 'astro:content';
import { renderTitle } from '../../lib/renderTitle';
import { prettyDate, prettyDateLong, processBlurb } from '../../lib/utils';
import ByAuthors from '../../components/ui/ByAuthors.astro';
import type { Author } from '../../content.config';

export async function getStaticPaths() {
	const newsletters = await getCollection('newsletters');
	return newsletters.map((newsletter) => ({
		params: { id: newsletter.id },
		props: { newsletter },
	}));
}

const { newsletter } = Astro.props;
if (!newsletter.data.publish_date && newsletter.data.draft) {
	newsletter.data.publish_date = new Date();
}

const title = await renderTitle(newsletter.data.title);
const { Content } = await render(newsletter);

let authors:Author[] = [];
if(newsletter.data.authors && newsletter.data.authors.length) {
	authors = await getEntries(newsletter.data.authors);
	if (!authors || !authors[0]) {
		throw new Error('authors must be defined');
	}
}


---
<ContentLayout title={newsletter.data.title}>
	<div class="mx-auto mt-6 w-full max-w-7xl">
		<div class="flex flex-row">
			<div class="relative h-24 w-64">
				<a href="/newsletters/1"
					class="bg-newsletter block text-black h-24 w-64 cursor-pointer rounded-t-4xl py-6 text-center translate-y-5 font-mono text-lg transition-transform duration-300 ease-in-out hover:translate-y-3">
					newsletters
				</a>
			</div>
		</div>
		<div class="border-newsletter relative flex flex-row bg-white md:border-10">

			<aside class="mt-36 hidden w-64 border-r-2 border-neutral-500 lg:block"></aside>

			<main class="relative w-full flex-1 px-4 py-8 lg:min-w-3xl">

				<article class="m-auto max-w-[75ch] text-lg">
					<h1 class="mb-5 text-4xl font-semibold dark:text-gray-50" set:html={title} />
					<div class="mb-5 w-fit border-b font-mono text-xl text-red-500 italic">
						<!--<ByAuthors authors={authors} />-->
					</div>
					<div class="mb-5 font-mono text-xl">
						{prettyDateLong(newsletter.data.publish_date!)}
					</div>

					<div class="prose">
						<Content />
					</div>

				</article>

			</main>

			<aside class="mt-36 hidden w-64 border-l-2 border-neutral-500 xl:block"></aside>

		</div>

	</div>
</ContentLayout>
