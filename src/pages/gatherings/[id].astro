---
import ContentLayout from '../../layouts/ContentLayout.astro';
import formatAuthorCitation from '../../lib/authorCitation.js';
import { getCollection, getEntries, render } from 'astro:content';
import PostLink from '../../components/ui/PostLink.astro';
import { strict as assert } from 'assert';

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
	const gatherings = await getCollection('gatherings');
	return gatherings.map((gathering) => ({
		params: { id: gathering.id },
		props: { gathering },
	}));
}
const { gathering } = Astro.props;
if(!gathering.data.publish_date && gathering.data.draft) {
	gathering.data.publish_date = new Date();
}

const authors = await getEntries(gathering.data.authors);
assert(authors, 'Gathering must have at least one author');

if (!authors || !authors[0]) {
	throw new Error('authors must be defined');
}

const postsByGathering = (await getCollection('posts')).filter((post) =>
	gathering.data.posts?.some((item) => item.id === post.id),
);

const authorCitation = formatAuthorCitation(authors);

const { Content } = await render(gathering);
---

<ContentLayout title={gathering.data.title}>
	<article>
		<h1>{gathering.data.title}</h1>

		<a href={'https://electronicbookreview.com/gathering/' + gathering.data.slug} target="_blank"
			>EBR Link</a
		>

		<p>
			By: {
			authors
					.map((author) => <a href={`/authors/${author.id}`}>{author.data.title}</a>)
					.join(', ')
			}
		</p>

		<p>Published: {gathering.data.publish_date.toISOString().split('T')[0]}</p>

		<div>
			Essays:
			<ul class="ml-4 list-disc">
				{
					postsByGathering.map((post) => (
						<li>
							<PostLink id={post.id} />
						</li>
					))
				}
			</ul>
		</div>

		<hr />
		<Content />

		<h3>Cite this Gathering:</h3>
		<p>
			{authorCitation}. "{gathering.data.title}" <span class="italic">Electronic Book Review</span>, {
				gathering.data.publish_date.toLocaleDateString('en-GB', {
					year: 'numeric',
					month: 'long',
					day: 'numeric',
				})
			}, {'https://electronicbookreview.com/gathering/' + gathering.data.slug}
		</p>
	</article>
</ContentLayout>
